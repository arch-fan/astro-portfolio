---
interface Props {
    className?: string;
}

const { className } = Astro.props;
---

<form class={`${className} gap-4 m-auto dark:text-white`} id="contact-form">
    <label for="name" class="flex flex-col gap-1">
        Nombre
        <input
            type="text"
            name="name"
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] shadow focus:outline-none p-1"
        />
    </label>

    <label for="mail" class="flex flex-col gap-1">
        Correo
        <input
            type="email"
            name="email"
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] focus:outline-none shadow p-1"
        />
    </label>

    <label for="message" class="flex flex-col gap-1">
        Mensaje
        <textarea
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] focus:outline-none h-40 shadow p-1"
            name="message"></textarea>
    </label>
    <input
        type="submit"
        value="Enviar"
        class="w-fit place-self-center py-3 px-6 rounded border border-alt-text cursor-pointer hover:bg-opacity-10 dark:bg-white hover:bg-black hover dark:bg-opacity-10 dark:hover:bg-opacity-5"
    />
    <span id="form-response"></span>
</form>

<script>
    const $form = document.querySelector("#contact-form") as HTMLFormElement;
    const $responseField = document.querySelector(
        "#form-response",
    ) as HTMLSpanElement;

    const postData = async (url: string, data: any) => {
        const response = await fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });
        return response.text();
    };

    $form?.addEventListener("submit", async (e) => {
        e.preventDefault();

        const data = new FormData(e.target as HTMLFormElement);

        let sendData: any = {};

        data.forEach((value, key) => {
            sendData[key] = value;
        });

        $responseField.textContent = "Enviando...";
        try {
            const responseText = await postData("/api/contact", sendData);
            $responseField.textContent = responseText;
        } catch (error) {
            $responseField.textContent =
                "Ha habido un error enviando los datos del formulario. Inténtelo más tarde";
        }
    });
</script>
