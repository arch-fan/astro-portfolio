---
interface Props {
    className?: string;
}

const { className } = Astro.props;
---

<form class={`${className} gap-4 m-auto dark:text-white`} id="contact-form">
    <label for="name" class="flex flex-col gap-1">
        Nombre
        <input
            type="text"
            name="name"
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] shadow focus:outline-none p-1"
        />
    </label>

    <label for="mail" class="flex flex-col gap-1">
        Correo
        <input
            type="email"
            name="email"
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] focus:outline-none shadow p-1"
        />
    </label>

    <label for="message" class="flex flex-col gap-1">
        Mensaje
        <textarea
            class="dark:bg-opacity-5 bg-white rounded border border-[#a5c9ca] focus:outline-none h-40 shadow p-1"
            name="message"></textarea>
    </label>
    <input
        type="submit"
        value="Enviar"
        class="w-fit place-self-center py-3 px-6 rounded border border-alt-text cursor-pointer hover:bg-opacity-10 dark:bg-white hover:bg-black hover dark:bg-opacity-10 dark:hover:bg-opacity-5"
    />
    <p id="form-response" class="font-bold"></p>
</form>

<script>
    interface FormResponse {
        message: string;
        color: string;
    }

    const $form = document.querySelector(
        "form#contact-form",
    ) as HTMLFormElement;
    const $responseField = document.querySelector(
        "p#form-response",
    ) as HTMLSpanElement;

    $form?.addEventListener("submit", async (e) => {
        e.preventDefault();

        const data = new FormData(e.target as HTMLFormElement);

        $responseField.textContent = "Enviando...";
        $responseField.style.color = "#fff";

        try {
            const response = await fetch("https://arch-fan.com/api/contact", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(Object.fromEntries(data)),
            });

            if (response.status === 200 || response.status === 400) {
                const responseData: FormResponse = await response.json();
                $responseField.textContent = responseData.message;
                $responseField.style.color = responseData.color;
            } else {
                $responseField.textContent =
                    "⚠️ Ha habido un error enviando los datos del formulario. Inténtalo más tarde.";
                $responseField.style.color = "#fb0";
            }
        } catch (e) {
            $responseField.textContent =
                "⚠️ Ha habido un error enviando los datos del formulario. Inténtalo más tarde.";
            $responseField.style.color = "#fb0";
        }
    });
</script>
